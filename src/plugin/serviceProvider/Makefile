#############################################################################
# Makefile for building: libserviceProvider.so
# Generated by qmake (2.01a) (Qt 4.8.5) on: Tue Jun 24 15:28:15 2014
# Project:  serviceProvider.pro
# Template: lib
# Command: /usr/bin/qmake-qt4 -spec /usr/lib64/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile serviceProvider.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DPEGASUS_PLATFORM_LINUX_X86_64_GNU -DQT_PLUGIN -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -ansi -pedantic -Wall -Wextra -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I../../ui -I../../logger -I. -I.
LINK          = g++
LFLAGS        = -shared
LIBS          = $(SUBLIBS)  -L/usr/lib64 -lpegclient -lpegcommon -lboost_thread -L../../logger -lLogger -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = serviceprovider.cpp \
		../../ui/plugin.cpp \
		../../ui/cimdatetimeconv.cpp \
		../../ui/lmiwbem_value.cpp \
		instructions/startserviceinstruction.cpp \
		instructions/stopserviceinstruction.cpp \
		instructions/enableserviceinstruction.cpp \
		instructions/getinstruction.cpp \
		instructions/disableserviceinstruction.cpp \
		instructions/serviceinstruction.cpp \
		actionbox.cpp \
		../../ui/instructions/connectinstruction.cpp \
		../../ui/instructions/instruction.cpp \
		instructions/restartserviceinstruction.cpp \
		instructions/reloadserviceinstruction.cpp moc_serviceprovider.cpp \
		moc_plugin.cpp \
		moc_actionbox.cpp \
		moc_instruction.cpp
OBJECTS       = serviceprovider.o \
		plugin.o \
		cimdatetimeconv.o \
		lmiwbem_value.o \
		startserviceinstruction.o \
		stopserviceinstruction.o \
		enableserviceinstruction.o \
		getinstruction.o \
		disableserviceinstruction.o \
		serviceinstruction.o \
		actionbox.o \
		connectinstruction.o \
		instruction.o \
		restartserviceinstruction.o \
		reloadserviceinstruction.o \
		moc_serviceprovider.o \
		moc_plugin.o \
		moc_actionbox.o \
		moc_instruction.o
DIST          = /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/debug.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/declarative_debug.prf \
		/usr/lib64/qt4/mkspecs/features/shared.prf \
		/usr/lib64/qt4/mkspecs/features/dll.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		serviceProvider.pro
QMAKE_TARGET  = serviceProvider
DESTDIR       = ../
TARGET        = libserviceProvider.so
TARGETD       = libserviceProvider.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../$(TARGET)

../$(TARGET): ui_serviceprovider.h ui_actionbox.h $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../ || $(MKDIR) ../ 
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-$(MOVE) $(TARGET) ../
	{ test -z "$(DESTDIR)" || cd "$(DESTDIR)"; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index ." -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true



Makefile: serviceProvider.pro  /usr/lib64/qt4/mkspecs/linux-g++/qmake.conf /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/debug.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/declarative_debug.prf \
		/usr/lib64/qt4/mkspecs/features/shared.prf \
		/usr/lib64/qt4/mkspecs/features/dll.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/libQtGui.prl \
		/usr/lib64/libQtCore.prl
	$(QMAKE) -spec /usr/lib64/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile serviceProvider.pro
/usr/lib64/qt4/mkspecs/common/unix.conf:
/usr/lib64/qt4/mkspecs/common/linux.conf:
/usr/lib64/qt4/mkspecs/common/gcc-base.conf:
/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/lib64/qt4/mkspecs/common/g++-base.conf:
/usr/lib64/qt4/mkspecs/common/g++-unix.conf:
/usr/lib64/qt4/mkspecs/qconfig.pri:
/usr/lib64/qt4/mkspecs/features/qt_functions.prf:
/usr/lib64/qt4/mkspecs/features/qt_config.prf:
/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib64/qt4/mkspecs/features/default_pre.prf:
/usr/lib64/qt4/mkspecs/features/debug.prf:
/usr/lib64/qt4/mkspecs/features/default_post.prf:
/usr/lib64/qt4/mkspecs/features/declarative_debug.prf:
/usr/lib64/qt4/mkspecs/features/shared.prf:
/usr/lib64/qt4/mkspecs/features/dll.prf:
/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/lib64/qt4/mkspecs/features/warn_on.prf:
/usr/lib64/qt4/mkspecs/features/qt.prf:
/usr/lib64/qt4/mkspecs/features/unix/thread.prf:
/usr/lib64/qt4/mkspecs/features/moc.prf:
/usr/lib64/qt4/mkspecs/features/resources.prf:
/usr/lib64/qt4/mkspecs/features/uic.prf:
/usr/lib64/qt4/mkspecs/features/yacc.prf:
/usr/lib64/qt4/mkspecs/features/lex.prf:
/usr/lib64/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/libQtGui.prl:
/usr/lib64/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/lib64/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile serviceProvider.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/serviceProvider1.0.0 || $(MKDIR) .tmp/serviceProvider1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/serviceProvider1.0.0/ && $(COPY_FILE) --parents serviceprovider.h ../../ui/plugin.h instructions/startserviceinstruction.h instructions/stopserviceinstruction.h instructions/enableserviceinstruction.h instructions/getinstruction.h instructions/disableserviceinstruction.h instructions/serviceinstruction.h actionbox.h ../../ui/instructions/connectinstruction.h instructions/restartserviceinstruction.h instructions/reloadserviceinstruction.h ../../ui/instructions/instruction.h .tmp/serviceProvider1.0.0/ && $(COPY_FILE) --parents serviceprovider.cpp ../../ui/plugin.cpp ../../ui/cimdatetimeconv.cpp ../../ui/lmiwbem_value.cpp instructions/startserviceinstruction.cpp instructions/stopserviceinstruction.cpp instructions/enableserviceinstruction.cpp instructions/getinstruction.cpp instructions/disableserviceinstruction.cpp instructions/serviceinstruction.cpp actionbox.cpp ../../ui/instructions/connectinstruction.cpp ../../ui/instructions/instruction.cpp instructions/restartserviceinstruction.cpp instructions/reloadserviceinstruction.cpp .tmp/serviceProvider1.0.0/ && $(COPY_FILE) --parents serviceprovider.ui actionbox.ui .tmp/serviceProvider1.0.0/ && (cd `dirname .tmp/serviceProvider1.0.0` && $(TAR) serviceProvider1.0.0.tar serviceProvider1.0.0 && $(COMPRESS) serviceProvider1.0.0.tar) && $(MOVE) `dirname .tmp/serviceProvider1.0.0`/serviceProvider1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/serviceProvider1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_serviceprovider.cpp moc_plugin.cpp moc_actionbox.cpp moc_instruction.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_serviceprovider.cpp moc_plugin.cpp moc_actionbox.cpp moc_instruction.cpp
moc_serviceprovider.cpp: serviceprovider.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) serviceprovider.h -o moc_serviceprovider.cpp

moc_plugin.cpp: ../../ui/instructions/instruction.h \
		../../ui/lmiwbem_client.h \
		../../ui/widgets/providerwidget.h \
		../../ui/plugin.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ../../ui/plugin.h -o moc_plugin.cpp

moc_actionbox.cpp: serviceprovider.h \
		actionbox.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) actionbox.h -o moc_actionbox.cpp

moc_instruction.cpp: ../../ui/instructions/instruction.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ../../ui/instructions/instruction.h -o moc_instruction.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_serviceprovider.h ui_actionbox.h
compiler_uic_clean:
	-$(DEL_FILE) ui_serviceprovider.h ui_actionbox.h
ui_serviceprovider.h: serviceprovider.ui
	/usr/lib64/qt4/bin/uic serviceprovider.ui -o ui_serviceprovider.h

ui_actionbox.h: actionbox.ui
	/usr/lib64/qt4/bin/uic actionbox.ui -o ui_actionbox.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

serviceprovider.o: serviceprovider.cpp actionbox.h \
		serviceprovider.h \
		instructions/disableserviceinstruction.h \
		instructions/serviceinstruction.h \
		instructions/enableserviceinstruction.h \
		instructions/getinstruction.h \
		instructions/reloadserviceinstruction.h \
		instructions/restartserviceinstruction.h \
		instructions/startserviceinstruction.h \
		instructions/stopserviceinstruction.h \
		ui_serviceprovider.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serviceprovider.o serviceprovider.cpp

plugin.o: ../../ui/plugin.cpp ../../ui/instructions/connectinstruction.h \
		../../ui/instructions/instruction.h \
		../../ui/plugin.h \
		../../ui/lmiwbem_client.h \
		../../ui/widgets/providerwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o plugin.o ../../ui/plugin.cpp

cimdatetimeconv.o: ../../ui/cimdatetimeconv.cpp ../../ui/cimdatetimeconv.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cimdatetimeconv.o ../../ui/cimdatetimeconv.cpp

lmiwbem_value.o: ../../ui/lmiwbem_value.cpp ../../ui/lmiwbem_value.h \
		../../ui/cimdatetimeconv.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o lmiwbem_value.o ../../ui/lmiwbem_value.cpp

startserviceinstruction.o: instructions/startserviceinstruction.cpp ../../ui/lmiwbem_value.h \
		instructions/startserviceinstruction.h \
		instructions/serviceinstruction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o startserviceinstruction.o instructions/startserviceinstruction.cpp

stopserviceinstruction.o: instructions/stopserviceinstruction.cpp ../../ui/lmiwbem_value.h \
		instructions/stopserviceinstruction.h \
		instructions/serviceinstruction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o stopserviceinstruction.o instructions/stopserviceinstruction.cpp

enableserviceinstruction.o: instructions/enableserviceinstruction.cpp instructions/enableserviceinstruction.h \
		instructions/serviceinstruction.h \
		../../ui/lmiwbem_value.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o enableserviceinstruction.o instructions/enableserviceinstruction.cpp

getinstruction.o: instructions/getinstruction.cpp instructions/getinstruction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o getinstruction.o instructions/getinstruction.cpp

disableserviceinstruction.o: instructions/disableserviceinstruction.cpp instructions/disableserviceinstruction.h \
		instructions/serviceinstruction.h \
		../../ui/lmiwbem_value.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o disableserviceinstruction.o instructions/disableserviceinstruction.cpp

serviceinstruction.o: instructions/serviceinstruction.cpp instructions/serviceinstruction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serviceinstruction.o instructions/serviceinstruction.cpp

actionbox.o: actionbox.cpp actionbox.h \
		serviceprovider.h \
		ui_actionbox.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o actionbox.o actionbox.cpp

connectinstruction.o: ../../ui/instructions/connectinstruction.cpp ../../ui/instructions/connectinstruction.h \
		../../ui/instructions/instruction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o connectinstruction.o ../../ui/instructions/connectinstruction.cpp

instruction.o: ../../ui/instructions/instruction.cpp ../../ui/instructions/instruction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o instruction.o ../../ui/instructions/instruction.cpp

restartserviceinstruction.o: instructions/restartserviceinstruction.cpp ../../ui/lmiwbem_value.h \
		instructions/restartserviceinstruction.h \
		instructions/serviceinstruction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o restartserviceinstruction.o instructions/restartserviceinstruction.cpp

reloadserviceinstruction.o: instructions/reloadserviceinstruction.cpp ../../ui/lmiwbem_value.h \
		instructions/reloadserviceinstruction.h \
		instructions/serviceinstruction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reloadserviceinstruction.o instructions/reloadserviceinstruction.cpp

moc_serviceprovider.o: moc_serviceprovider.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_serviceprovider.o moc_serviceprovider.cpp

moc_plugin.o: moc_plugin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_plugin.o moc_plugin.cpp

moc_actionbox.o: moc_actionbox.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_actionbox.o moc_actionbox.cpp

moc_instruction.o: moc_instruction.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_instruction.o moc_instruction.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

